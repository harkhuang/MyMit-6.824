return:2
整理工作环境:1
string:2
strconv.Itoa(value):1
//:8
inputFile:1
scanner:1
import:1
file:1
fmt.Println("open:1
error"):1
inputFile.Close():1
:=range:1
S3：:1
key:1
main:1
func:3
mapret:2
writeFile.Close():1
buf:5
(:1
words{:1
reducename:1
{:1
):1
:=:6
"strconv":1
var:3
strings.Fields(scanner.Text()):1
map[string]int){:1
fmt.Println("key",key,":value",vale):1
map[string]int:1
"strings":1
"os":1
0600):1
contens:1
(map[string]int){:1
for:4
=:3
reduceName(jobName,mapTaskNumber,nReduce):1
writeFile:1
"bufio":1
mapF(file:1
,_:1
words:1
//fmt.Println(len(words)):1
mapV{:1
main(){:1
将mapF返回的数据根据key分类,跟文件名对应(reduceName获取文件名):1
"io/ioutil":1
retmap:2
range:2
os.OpenFile("out.file",os.O_WRONLY|os.O_CREATE,:1
string):1
key,vale:1
if:1
!=:1
package:1
,inputError:1
bufio.NewScanner(inputFile):1
TODO::1
traveral(mapV:1
key,value:1
writeFile.Write([]byte(buf)):1
string,:1
inputError:1
":":1
make(map[string]int):1
retmap[word]+=1:1
2.contens:1
_,word:1
"io":1
os.Open(file):1
defer:2
scanner.Scan(){:1
//var:1
将分类好的数据分别写入不同文件:1
"encoding/json":1
nil:1
mapF("main.go","xxxxx"):1
+=:4
nil{:1
}:8
1.换行单词统计:1
[]string:1
"\n":1
S4::1
"hash/fnv":1
"fmt":1
